;; Analyzed by ClojureScript 1.7.170
{:use-macros {defui om.next}, :excludes #{}, :name om-tutorial.core, :imports nil, :requires {dom om.dom, om.dom om.dom, clojure.test.check.generators clojure.test.check.generators, gen clojure.test.check.generators, tc clojure.test.check, clojure.test.check clojure.test.check, om om.next, clojure.test.check.properties clojure.test.check.properties, om.next om.next, prop clojure.test.check.properties}, :uses nil, :defs {Person {:protocol-inline nil, :meta {:jsdoc ["@constructor"], :arglists (quote ([])), :file nil}, :name om-tutorial.core/Person, :variadic false, :file "C:\\work\\om-tutorial\\src\\om_tutorial\\core.cljs", :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 67, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :jsdoc ["@constructor"]}, remove-friend {:protocol-inline nil, :meta {:file "C:\\work\\om-tutorial\\src\\om_tutorial\\core.cljs", :line 42, :column 7, :end-line 42, :end-column 20, :arglists (quote ([state id friend]))}, :name om-tutorial.core/remove-friend, :variadic false, :file "C:\\work\\om-tutorial\\src\\om_tutorial\\core.cljs", :end-column 20, :method-params ([state id friend]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 42, :end-line 42, :max-fixed-arity 3, :fn-var true, :arglists (quote ([state id friend]))}, mutate {:name om-tutorial.core/mutate, :file "C:\\work\\om-tutorial\\src\\om_tutorial\\core.cljs", :line 17, :column 1, :end-line 17, :end-column 17, :meta {:file "C:\\work\\om-tutorial\\src\\om_tutorial\\core.cljs", :line 17, :column 11, :end-line 17, :end-column 17}}, read {:name om-tutorial.core/read, :file "C:\\work\\om-tutorial\\src\\om_tutorial\\core.cljs", :line 10, :column 1, :end-line 10, :end-column 15, :meta {:file "C:\\work\\om-tutorial\\src\\om_tutorial\\core.cljs", :line 10, :column 11, :end-line 10, :end-column 15}}, add-friend {:protocol-inline nil, :meta {:file "C:\\work\\om-tutorial\\src\\om_tutorial\\core.cljs", :line 27, :column 7, :end-line 27, :end-column 17, :arglists (quote ([state id friend]))}, :name om-tutorial.core/add-friend, :variadic false, :file "C:\\work\\om-tutorial\\src\\om_tutorial\\core.cljs", :end-column 17, :method-params ([state id friend]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 27, :end-line 27, :max-fixed-arity 3, :fn-var true, :arglists (quote ([state id friend]))}, People {:protocol-inline nil, :meta {:jsdoc ["@constructor"], :arglists (quote ([])), :file nil}, :name om-tutorial.core/People, :variadic false, :file "C:\\work\\om-tutorial\\src\\om_tutorial\\core.cljs", :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 75, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :jsdoc ["@constructor"]}, prop-no-self-friending {:protocol-inline nil, :meta {:file "C:\\work\\om-tutorial\\src\\om_tutorial\\core.cljs", :line 100, :column 7, :end-line 100, :end-column 29, :arglists (quote ([]))}, :name om-tutorial.core/prop-no-self-friending, :variadic false, :file "C:\\work\\om-tutorial\\src\\om_tutorial\\core.cljs", :end-column 29, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 100, :end-line 100, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, init-data {:name om-tutorial.core/init-data, :file "C:\\work\\om-tutorial\\src\\om_tutorial\\core.cljs", :line 54, :column 1, :end-line 54, :end-column 15, :meta {:file "C:\\work\\om-tutorial\\src\\om_tutorial\\core.cljs", :line 54, :column 6, :end-line 54, :end-column 15}}, self-friended? {:protocol-inline nil, :meta {:file "C:\\work\\om-tutorial\\src\\om_tutorial\\core.cljs", :line 97, :column 7, :end-line 97, :end-column 21, :arglists (quote ([{:keys [id friends]}]))}, :name om-tutorial.core/self-friended?, :variadic false, :file "C:\\work\\om-tutorial\\src\\om_tutorial\\core.cljs", :end-column 21, :method-params ([p__32292]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 97, :end-line 97, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [id friends]}]))}, app-state {:name om-tutorial.core/app-state, :file "C:\\work\\om-tutorial\\src\\om_tutorial\\core.cljs", :line 80, :column 1, :end-line 80, :end-column 15, :meta {:file "C:\\work\\om-tutorial\\src\\om_tutorial\\core.cljs", :line 80, :column 6, :end-line 80, :end-column 15}}, parser {:name om-tutorial.core/parser, :file "C:\\work\\om-tutorial\\src\\om_tutorial\\core.cljs", :line 83, :column 1, :end-line 83, :end-column 12, :meta {:file "C:\\work\\om-tutorial\\src\\om_tutorial\\core.cljs", :line 83, :column 6, :end-line 83, :end-column 12}}, Friend {:protocol-inline nil, :meta {:jsdoc ["@constructor"], :arglists (quote ([])), :file nil}, :name om-tutorial.core/Friend, :variadic false, :file "C:\\work\\om-tutorial\\src\\om_tutorial\\core.cljs", :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 59, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :jsdoc ["@constructor"]}, gen-tx-add-remove {:name om-tutorial.core/gen-tx-add-remove, :file "C:\\work\\om-tutorial\\src\\om_tutorial\\core.cljs", :line 85, :column 1, :end-line 85, :end-column 23, :meta {:file "C:\\work\\om-tutorial\\src\\om_tutorial\\core.cljs", :line 85, :column 6, :end-line 85, :end-column 23}}}, :require-macros {prop clojure.test.check.properties, clojure.test.check.properties clojure.test.check.properties, om om.next, om.next om.next, dom om.dom, om.dom om.dom}, :cljs.analyzer/constants {:seen #{friend/add :read :om.next/queries :config :default :name :value :state :ref->components friend/remove :person/by-id :friends :id :indexer :action :friend :indexes :query :hierarchy :people :mutate}, :order [:hierarchy :default :people :state :query :value :person/by-id :friends friend/add :id :friend :action friend/remove :name :config :indexer :indexes :ref->components :om.next/queries :read :mutate]}, :doc nil}